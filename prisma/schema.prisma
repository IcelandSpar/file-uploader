// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String // @db.MediumText  MediumText may be needed for MySql
  expiresAt DateTime
}

model Users {
  id       Int       @id @default(autoincrement())
  username String    @db.VarChar(255)
  hash     String    @db.VarChar(255)
  salt     String    @db.VarChar(255)
  Folders  Folders[]
  Files    Files[]
}

model Folders {
  id          Int      @id @default(autoincrement())
  user        Users    @relation(fields: [userId], references: [id])
  userId      Int
  folderName  String   @db.VarChar(50)
  description String?  @db.VarChar(255)
  created     DateTime @default(now())
  modified    DateTime @updatedAt
  shared      Boolean  @default(false)
  Files       Files[]
}

model Files {
  id           Int     @id @default(autoincrement())
  folder       Folders @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId     Int
  user         Users   @relation(fields: [userId], references: [id])
  userId       Int
  originalName String  @db.VarChar(255)
  encoding     String  @db.VarChar(255)
  mimetype     String  @db.VarChar(255)
  destination  String  @db.VarChar(255)
  fileName     String  @db.VarChar(255)
  path         String  @db.VarChar(255)
  size         Int
}
